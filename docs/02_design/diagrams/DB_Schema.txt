Table user_info as U {
  id int [pk, increment] 
  user_uuid uuid [unique, not null, default: `uuid_generate_v4()`]
  first_name varchar
	last_name varchar
	middle_initial varchar
  nickname varchar
	account_number varchar
	status varchar
	platform_account varchar
  Indexes {
      account_number
      user_uuid
  }
  note: "Table holding User/Account information"
}

enum order_status {
    PENDING
    SUBMITTED
    FULLY_MATCHED
    PARTIALLY_MATCHED
    PAID
    COMPLETED
    CANCELLED
}
	
Table order_info as O {
  id int [pk, increment]
  order_uuid uuid  [unique, not null, default: `uuid_generate_v4()`]
  transaction_type int  [not null]
  user_id int [not null, ref: > U.id]
  from_id int [ref: > U.id]
  to_id int [ref: > U.id]
  amount int  [not null]
  remaining_amount int [not null]
  fee int  [not null]
  status order_status  [not null]
  currency varchar  [not null]
  trigger_order_id int [ref: > O.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  Indexes {
      order_uuid
  }
  note: "Table storing Orders information"
}

Table order_matching_info as m {
  id int [pk, increment]
  order1_id int [ref: > O.id]
  order2_id int [ref: > O.id]
  amount int [not null]
  created_at timestamp [not null, default: `now()`]
  Indexes {
      order1_id
      order2_id
      (order1_id, order2_id) [unique]
  }

  note: "Table storing information about orders execution"
}