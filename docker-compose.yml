version: "3.3"

services:
  db:
    image: postgres
    container_name: squrl_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres

  api_service:
    container_name: squrl_api_service
    build:
      context: .
      dockerfile: src/api_service/Dockerfile
    environment:
      DB_DRIVER: postgres
      DB_SOURCE: postgresql://postgres:postgres@db:5433/postgres?sslmode=disable
      DB_MAX_IDLE_CONNS: 5
      DB_MAX_OPEN_CONNS: 10
      DB_MAX_IDLE_TIME: 1s
      DB_MAX_LIFE_TIME: 30s
      # HOST: 0.0.0.0
      ADMIN_PASSWORD: 1qty5pNbtcSC5zb
      TOKEN_SYMMETRIC_KEY: BOPF5DbwQ3Zds4Npvc46UfL3QaOBOQdv
      REDIRECTION_SERVER_BASE_URL: http://redirection_service:8085
      LOG_LEVEL: debug
      ENVIRONMENT: test
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - db
    entrypoint: ["/app/api_service", "--port", "8080", "--host", "0.0.0.0"]

  redirection_service:
    container_name: squrl_redirection_service
    build:
      context: .
      dockerfile: src/redirection_service/Dockerfile
    environment:
      DB_DRIVER: postgres
      DB_SOURCE: postgresql://postgres:postgres@db:5433/postgres?sslmode=disable
      DB_MAX_IDLE_CONNS: 5
      DB_MAX_OPEN_CONNS: 10
      DB_MAX_IDLE_TIME: 1s
      DB_MAX_LIFE_TIME: 30s
      # HOST: 0.0.0.0
      LOG_LEVEL: debug
      ENVIRONMENT: test
    expose:
      - "8080"
    ports:
      - "8085:8080"
    depends_on:
      - db
    entrypoint: ["/app/redirection_service", "--port", "8085", "--host", "0.0.0.0"]
    