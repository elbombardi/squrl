// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostCustomerOKCode is the HTTP code returned for type PostCustomerOK
const PostCustomerOKCode int = 200

/*PostCustomerOK Success

swagger:response postCustomerOK
*/
type PostCustomerOK struct {

	/*
	  In: Body
	*/
	Payload *PostCustomerOKBody `json:"body,omitempty"`
}

// NewPostCustomerOK creates PostCustomerOK with default headers values
func NewPostCustomerOK() *PostCustomerOK {

	return &PostCustomerOK{}
}

// WithPayload adds the payload to the post customer o k response
func (o *PostCustomerOK) WithPayload(payload *PostCustomerOKBody) *PostCustomerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post customer o k response
func (o *PostCustomerOK) SetPayload(payload *PostCustomerOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCustomerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCustomerBadRequestCode is the HTTP code returned for type PostCustomerBadRequest
const PostCustomerBadRequestCode int = 400

/*PostCustomerBadRequest Bad Request

swagger:response postCustomerBadRequest
*/
type PostCustomerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostCustomerBadRequestBody `json:"body,omitempty"`
}

// NewPostCustomerBadRequest creates PostCustomerBadRequest with default headers values
func NewPostCustomerBadRequest() *PostCustomerBadRequest {

	return &PostCustomerBadRequest{}
}

// WithPayload adds the payload to the post customer bad request response
func (o *PostCustomerBadRequest) WithPayload(payload *PostCustomerBadRequestBody) *PostCustomerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post customer bad request response
func (o *PostCustomerBadRequest) SetPayload(payload *PostCustomerBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCustomerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCustomerUnauthorizedCode is the HTTP code returned for type PostCustomerUnauthorized
const PostCustomerUnauthorizedCode int = 401

/*PostCustomerUnauthorized Unauthorized

swagger:response postCustomerUnauthorized
*/
type PostCustomerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostCustomerUnauthorizedBody `json:"body,omitempty"`
}

// NewPostCustomerUnauthorized creates PostCustomerUnauthorized with default headers values
func NewPostCustomerUnauthorized() *PostCustomerUnauthorized {

	return &PostCustomerUnauthorized{}
}

// WithPayload adds the payload to the post customer unauthorized response
func (o *PostCustomerUnauthorized) WithPayload(payload *PostCustomerUnauthorizedBody) *PostCustomerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post customer unauthorized response
func (o *PostCustomerUnauthorized) SetPayload(payload *PostCustomerUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCustomerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
