swagger: "2.0"
info:
  version: "1.0.0"
  title: SQURL - ADMIN API
basePath: /v1
schemes:
  - http
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /health:
    get:
      description: Health check endpoint
      summary: Healthcheck
      operationId: Healthcheck
      tags:
        - general
      responses:
        200:
          description: Ok
          schema:
            type: string

  /login:
    post:
      description: Returns JWT token for authorized user
      summary: Login
      operationId: Login
      tags:
        - general
      consumes:
        - "application/json"
      parameters:
        - name: 'login'
          in: 'body'
          required: true
          description: 'Login Payload'
          schema:
            $ref: '#/definitions/LoginInfo'
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/LoginSuccess'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        
  /accounts :
    post:
      description: Create a new account
      summary: Create an account
      operationId: CreateAccount
      tags:
        - accounts
      security:
        - Bearer: []
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: "Bearer <JWT Token>"
        - name: account
          in: body
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AccountCreated'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update an account
      operationId: UpdateAccount
      summary: Update an account
      tags:
        - accounts
      security:
        - Bearer: []
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: "Bearer <JWT Token>"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountUpdate'
      responses:
        200:
          description: Success
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'

  /urls:
    post:
      description: Create a new URL
      operationId: CreateURL
      summary: Create a new URL
      tags:
        - urls
      security:
        - Bearer: []
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: "Bearer <JWT Token>"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/URL'

      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/URLCreated'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update URL
      operationId: UpdateURL
      summary: Update a URL
      tags:
        - urls
      security:
        - Bearer: []      
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: "Bearer <JWT Token>"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/URLUpdate'

      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              long_url:
                type: string
              status:
                type: string
              tracking_status:
                type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'

definitions:

  Error:
    type: object
    properties:
      error:
        type: string

  LoginInfo:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required: 
      - username
      - password

  LoginSuccess:
    type: object
    properties:
      success:
        type: boolean
      token:
        type: string

  Account:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
    required:
      - username
      - email

  AccountCreated:
    type: object
    properties:
      password:
        type: string
      prefix:
        type: string

  AccountUpdate:
    type: object
    properties:
      username:
        type: string
      status:
        type: string
        enum:
          - active
          - inactive
    required:
      - username
      - status

  URL:
    type: object
    properties:
      long_url:
        type: string
    required:
      - long_url
  
  URLCreated:
    type: object
    properties:
      short_url_key:
        type: string
      short_url:
        type: string

  URLUpdate:
    type: object
    properties:
      short_url_key:
        type: string
      new_long_url:
        type: string
      status:
        type: string
        enum:
          - active
          - inactive
      tracking_status:
        type: string
        enum:
          - active
          - inactive
    required:
      - short_url_key