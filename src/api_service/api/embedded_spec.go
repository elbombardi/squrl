// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "SQURL - ADMIN API",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/account": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update an account",
        "tags": [
          "accounts"
        ],
        "summary": "Update an account",
        "operationId": "UpdateAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new account",
        "tags": [
          "accounts"
        ],
        "summary": "Create an account",
        "operationId": "CreateAccount",
        "parameters": [
          {
            "type": "string",
            "description": "JWT Token.",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountCreated"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "tags": [
          "general"
        ],
        "summary": "Healthcheck",
        "operationId": "Healthcheck",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Returns JWT token for authorized user",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "general"
        ],
        "summary": "Login",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/url": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update URL",
        "tags": [
          "urls"
        ],
        "summary": "Update a URL",
        "operationId": "UpdateURL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/URLUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "long_url": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "tracking_status": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new URL",
        "tags": [
          "urls"
        ],
        "summary": "Create a new URL",
        "operationId": "CreateURL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/URL"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/URLCreated"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "username",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AccountCreated": {
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "AccountUpdate": {
      "type": "object",
      "required": [
        "username",
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "required": [
        "long_url"
      ],
      "properties": {
        "long_url": {
          "type": "string"
        }
      }
    },
    "URLCreated": {
      "type": "object",
      "properties": {
        "short_url": {
          "type": "string"
        },
        "short_url_key": {
          "type": "string"
        }
      }
    },
    "URLUpdate": {
      "type": "object",
      "required": [
        "short_url_key"
      ],
      "properties": {
        "new_long_url": {
          "type": "string"
        },
        "short_url_key": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "tracking_status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "SQURL - ADMIN API",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/account": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update an account",
        "tags": [
          "accounts"
        ],
        "summary": "Update an account",
        "operationId": "UpdateAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new account",
        "tags": [
          "accounts"
        ],
        "summary": "Create an account",
        "operationId": "CreateAccount",
        "parameters": [
          {
            "type": "string",
            "description": "JWT Token.",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountCreated"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "tags": [
          "general"
        ],
        "summary": "Healthcheck",
        "operationId": "Healthcheck",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Returns JWT token for authorized user",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "general"
        ],
        "summary": "Login",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/url": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update URL",
        "tags": [
          "urls"
        ],
        "summary": "Update a URL",
        "operationId": "UpdateURL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/URLUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "long_url": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "tracking_status": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new URL",
        "tags": [
          "urls"
        ],
        "summary": "Create a new URL",
        "operationId": "CreateURL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/URL"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/URLCreated"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "username",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AccountCreated": {
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "AccountUpdate": {
      "type": "object",
      "required": [
        "username",
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "required": [
        "long_url"
      ],
      "properties": {
        "long_url": {
          "type": "string"
        }
      }
    },
    "URLCreated": {
      "type": "object",
      "properties": {
        "short_url": {
          "type": "string"
        },
        "short_url_key": {
          "type": "string"
        }
      }
    },
    "URLUpdate": {
      "type": "object",
      "required": [
        "short_url_key"
      ],
      "properties": {
        "new_long_url": {
          "type": "string"
        },
        "short_url_key": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        },
        "tracking_status": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    }
  }
}`))
}
